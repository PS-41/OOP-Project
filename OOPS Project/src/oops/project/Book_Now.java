/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package oops.project;
import java.sql.*;
//import java.text.DecimalFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author vinay
 */
public class Book_Now extends javax.swing.JFrame {

    /**
     * Creates new form Booking_page
     */
    
    
    String userId;
    String vid;
    String s;
    String dest;
    public Book_Now(String s) {
        this.setUndecorated(true);
        setResizable(false);
        userId = s;
        initComponents();
        
        String sql15 = "select * from customer_info where uid = '" + userId + "'";
        
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn10 = DriverManager.getConnection("jdbc:mysql://localhost:3306/customers", "root", "prakhar@18");
     
            PreparedStatement pstmt15 = conn10.prepareStatement(sql15);            
            ResultSet rs5 = pstmt15.executeQuery();
            
            while(rs5.next())
            {
                welcome.setText("Welcome " + rs5.getString("fn"));
            }
            conn10.close();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jComboBox4 = new javax.swing.JComboBox<>();
        jComboBox5 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        welcome = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Booking Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tw Cen MT", 3, 48), new java.awt.Color(255, 255, 0))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel2.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 560, 10));

        jLabel5.setFont(new java.awt.Font("Tw Cen MT", 3, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 0));
        jLabel5.setText("Drop-Off Location");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 140, 30));

        jLabel4.setFont(new java.awt.Font("Tw Cen MT", 3, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 0));
        jLabel4.setText("Pick-Up Location");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 130, 30));

        jButton1.setBackground(new java.awt.Color(255, 255, 0));
        jButton1.setFont(new java.awt.Font("Tw Cen MT", 3, 24)); // NOI18N
        jButton1.setText("Book Now");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 310, 180, 40));

        jComboBox4.setFont(new java.awt.Font("Tw Cen MT", 3, 18)); // NOI18N
        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alwal", "Ameerpet", "BanjaraHills", "Begumpet", "Charminar", "Himayatnagar", "Mehdipatnam" }));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });
        jPanel2.add(jComboBox4, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 170, 220, 30));

        jComboBox5.setFont(new java.awt.Font("Tw Cen MT", 3, 18)); // NOI18N
        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alwal", "Ameerpet", "BanjaraHills", "Begumpet", "Charminar", "Himayatnagar", "Mehdipatnam" }));
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });
        jPanel2.add(jComboBox5, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 220, 220, 30));

        jLabel2.setFont(new java.awt.Font("Tw Cen MT", 3, 26)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 0));
        jLabel2.setText("Please provide the location details below");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 540, 80));

        jButton3.setBackground(new java.awt.Color(255, 255, 0));
        jButton3.setFont(new java.awt.Font("Tw Cen MT", 3, 24)); // NOI18N
        jButton3.setText("My Ride Details");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 310, 190, 40));

        jButton2.setBackground(new java.awt.Color(255, 255, 0));
        jButton2.setFont(new java.awt.Font("Tw Cen MT", 3, 24)); // NOI18N
        jButton2.setText("Show Fare");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 170, 40));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 30, 580, 400));

        welcome.setFont(new java.awt.Font("Times New Roman", 1, 28)); // NOI18N
        welcome.setForeground(new java.awt.Color(255, 255, 0));
        jPanel1.add(welcome, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 300, 30));

        jButton8.setFont(new java.awt.Font("Tw Cen MT", 3, 36)); // NOI18N
        jButton8.setText("Wallet");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, -1, 30));

        jButton11.setFont(new java.awt.Font("Tw Cen MT", 3, 36)); // NOI18N
        jButton11.setText("Profile");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, 30));

        jButton12.setFont(new java.awt.Font("Tw Cen MT", 3, 36)); // NOI18N
        jButton12.setText("Log Out");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, -1, 30));

        jButton9.setFont(new java.awt.Font("Tw Cen MT", 3, 36)); // NOI18N
        jButton9.setText("Your Rides");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, -1, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/oops/project/use 4.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1300, 600));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String sql8 = "select * from customer_info where uid = '" + userId + "'";
        String sqlq = "select * from distance where location = '" + jComboBox4.getSelectedItem().toString() + "'";

        int busy = 0;
        double balance = 0;
        double ff = 0;
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn5 = DriverManager.getConnection("jdbc:mysql://localhost:3306/customers", "root", "prakhar@18");
     
            PreparedStatement pstmt8 = conn5.prepareStatement(sql8);            
            ResultSet rs = pstmt8.executeQuery();
            
            while(rs.next())
            {
                busy = Integer.parseInt(rs.getString("status"));
                balance = rs.getDouble("bal");
            }
            
            
            
            PreparedStatement pstmtq = conn5.prepareStatement(sqlq);            
            ResultSet rsq = pstmtq.executeQuery();
            while(rsq.next())
            {
                ff = rsq.getDouble("f" + jComboBox5.getSelectedItem().toString());
            }
            
            conn5.close();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        
        if(busy == 1)
        {
            JOptionPane.showMessageDialog(null, "You have already booked a ride.");
        }
        else if(balance < 300)
        {
            JOptionPane.showMessageDialog(null, "Low balance. You must have a minimum of 300 INR for making a booking request. Please update your wallet");
        }
        else if(balance < ff)
        {
            JOptionPane.showMessageDialog(null, "Insufficient balance. Expected fare (Rs. " + ff + ") is more than the amount in your wallet. Please add money in your wallet for making this booking request");            
        }
        else
        {
            s = jComboBox4.getSelectedItem().toString();
            dest = jComboBox5.getSelectedItem().toString();
//        JOptionPane.showMessageDialog(null, sq + " selected");
            
            if(s.equals(dest) == true)
            {
                JOptionPane.showMessageDialog(null, "Source and Destination cannot be same.");
            }
            else
            {
                String driverLocation = "";
                String sql = "select * from distance where location = '" + s + "'";
                try
                {
                    vid = "";
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/customers", "root", "prakhar@18");
     
                    PreparedStatement pstmt = conn.prepareStatement(sql);            
                    ResultSet rs = pstmt.executeQuery();
                    int check = 0;
                    while(rs.next())
                    {
                        int i = 0;
                
                        while(i < 7)
                        {
                            i -= -1; 
                            String l = rs.getString("l" + i);
//                System.out.println(l);
                            String sql2 = "select * from drivers_info where location = '" + l + "' and status = '0'";
                
                            PreparedStatement pstmt2 = conn.prepareStatement(sql2);            
                            ResultSet rs2 = pstmt2.executeQuery();
             
                            double rate = -1;
                    
                            while(rs2.next())
                            {
                                check = 1;
//                    System.out.println(rs2.getString("rating"));
                                if(rate < rs2.getDouble("rating"))
                                {
                                    rate = rs2.getDouble("rating");
                                    vid = rs2.getString("vehicleId");
                                    driverLocation = rs2.getString("location");
                                }
                            }
                            if(check == 1) break;
                        }
                    }
                    conn.close();
            
//            JOptionPane.showMessageDialog(null, s + " " + vid);
                    if(check == 1)
                    {
                        int time = 0;
                        int driverTime = 0;
                        double fare = 0;
                        String sql2 = "update drivers_info set status = '1' where vehicleId = '" + vid + "'";
                        String sql4 = "update customer_info set status = '1' where uid = '" + userId + "'";
                        String sql5 = "update customer_info set vehicleId = '" + vid + "' where uid = '" + userId + "'";
                        String sql9 = "select * from distance where location = '" + s + "'";
                        try
                        {
                            Class.forName("com.mysql.jdbc.Driver");
                            Connection conn2 = DriverManager.getConnection("jdbc:mysql://localhost:3306/customers", "root", "prakhar@18");
                    
                            PreparedStatement pstmt2 = conn2.prepareStatement(sql2);
                            pstmt2.executeUpdate();
                    
                            PreparedStatement pstmt4 = conn2.prepareStatement(sql4);
                            pstmt4.executeUpdate();
                    
                            PreparedStatement pstmt5 = conn2.prepareStatement(sql5);
                            pstmt5.executeUpdate();
                            
                            PreparedStatement pstmt9 = conn2.prepareStatement(sql9);            
                            ResultSet rs3 = pstmt9.executeQuery();
                            while(rs3.next())
                            {
                                time = Integer.parseInt(rs3.getString("t" + dest));
                                driverTime = Integer.parseInt(rs3.getString("t" + driverLocation));
                                fare = rs3.getDouble("f" + dest);
                            }
                            
                            
                            String sql10 = "update drivers_info set fare = '" + fare + "' where vehicleId = '" + vid + "'";
                            String sql11 = "update drivers_info set time = '" + time + "' where vehicleId = '" + vid + "'";
                            String sql12 = "update drivers_info set std = '" + s + " to " + dest + "' where vehicleId = '" + vid + "'";
                                    
                            PreparedStatement pstmt10 = conn2.prepareStatement(sql10);
                            pstmt10.executeUpdate();
                    
                            PreparedStatement pstmt11 = conn2.prepareStatement(sql11);
                            pstmt11.executeUpdate();
                            
                            PreparedStatement pstmt12 = conn2.prepareStatement(sql12);
                            pstmt12.executeUpdate();
                    
                    
                            if(driverTime == 0)
                            {
                                JOptionPane.showMessageDialog(null, "Cab Booked. The driver is at the pickup point. Enjoy your ride");
                            }
                            else
                            {
                                JOptionPane.showMessageDialog(null, "Cab Booked. The driver will reach the pickup point in " + driverTime + " minute(s). Enjoy your ride");
                            }
                            
                            conn2.close();
                        }
                        catch(Exception e)
                        {
                            JOptionPane.showMessageDialog(null, e);
                        }
                
                
                        Task2 taskRunner2 = new Task2(userId, vid, time, driverTime, fare, s, dest);
                        taskRunner2.start();
                
//                        Task3 taskRunner3 = new Task3(userId);
//                        taskRunner3.start();
                
                
                
                        this.setVisible(false);
                        new Trip_Details(this).setVisible(true);
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Request Time Out. Sorry, no drivers currently available", "Unsuccessful Booking", JOptionPane.ERROR_MESSAGE);
                    }
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(null, e);
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        
        String sql2 = "update customer_info set sign = '0' where uid = '" + userId + "'";
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn2 = DriverManager.getConnection("jdbc:mysql://localhost:3306/customers", "root", "prakhar@18");
            
            PreparedStatement pstmt2 = conn2.prepareStatement(sql2);
            pstmt2.executeUpdate();
            conn2.close();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        
        this.setVisible(false);
        new Sign_In().setVisible(true);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new Profile(this).setVisible(true);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new Wallet(this).setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox5ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String sql8 = "select * from customer_info where uid = '" + userId + "'";
        int busy = 0;
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn5 = DriverManager.getConnection("jdbc:mysql://localhost:3306/customers", "root", "prakhar@18");
     
            PreparedStatement pstmt8 = conn5.prepareStatement(sql8);            
            ResultSet rs = pstmt8.executeQuery();
            
            while(rs.next())
            {
                busy = Integer.parseInt(rs.getString("status"));
            }
            conn5.close();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        
        if(busy == 0)
        {
            JOptionPane.showMessageDialog(null, "You do not have a ride booked at the moment");
        }
        else
        {
//            this.setVisible(false);
            this.dispose();
            new Trip_Details(this).setVisible(true);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String source = jComboBox4.getSelectedItem().toString();
        String destination = jComboBox5.getSelectedItem().toString();
        
        double fare = 0;
        String sql9 = "select * from distance where location = '" + source + "'";
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn2 = DriverManager.getConnection("jdbc:mysql://localhost:3306/customers", "root", "prakhar@18");
                                        
            PreparedStatement pstmt9 = conn2.prepareStatement(sql9);            
            ResultSet rs3 = pstmt9.executeQuery();
            while(rs3.next())
            {
                fare = rs3.getDouble("f" + destination);
            }                           
            conn2.close();
            if(source.equals(destination) == true)
            {
                JOptionPane.showMessageDialog(null, "Source and Destination cannot be same.");
            }
            else
            {
                JOptionPane.showMessageDialog(null, "The estimated fare is Rs. " + fare);
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        String sql8 = "select * from customer_info where uid = '" + userId + "'";
        String ridehistory = "";
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn5 = DriverManager.getConnection("jdbc:mysql://localhost:3306/customers", "root", "prakhar@18");
     
            PreparedStatement pstmt8 = conn5.prepareStatement(sql8);            
            ResultSet rs = pstmt8.executeQuery();
            
            while(rs.next())
            {
                ridehistory = rs.getString("ridehistory");
            }
            conn5.close();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        
        if(ridehistory.charAt(0) == '0')
        {
            JOptionPane.showMessageDialog(null, "You have not booked any rides yet");
        }
        else
        {
            this.setVisible(false);
            new Ride_History(this, ridehistory).setVisible(true);
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Booking_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Booking_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Booking_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Booking_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new Book_Now("null").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel welcome;
    // End of variables declaration//GEN-END:variables
}


class Task2 extends Thread
{
    String globevid, usid, source, dest;
    int t;
    int dt;
    double f;
    double updbal = 0;
    Task2(String u, String s, int t, int dt, double fare, String ss, String dd)
    {
        usid = u;
        globevid = s;
        this.t = t;
        this.dt = dt;
        f = fare;
        source = ss;
        dest = dd;
    }
    public void run()
    {
        for(; ;)
        {
            try
            {
                Thread.sleep((t + dt) * 60 * 1000);
                break;
            }
            catch(InterruptedException e)
            {
                System.out.println(e);
            }
        }
        
        
        String sql3 = "update drivers_info set status = '0' where vehicleId = '" + globevid + "'";
        String sql6 = "update customer_info set status = '0' where uid = '" + usid + "'";
        String sql7 = "update customer_info set vehicleId = '-1' where uid = '" + usid + "'";
        String sq = "select bal from customer_info where uid = '" + usid + "'";
        
        try
        {                
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn3 = DriverManager.getConnection("jdbc:mysql://localhost:3306/customers", "root", "prakhar@18");
            
            PreparedStatement pstmt3 = conn3.prepareStatement(sql3);
            pstmt3.executeUpdate();
            
            PreparedStatement pstmt6 = conn3.prepareStatement(sql6);
            pstmt6.executeUpdate();
                    
            PreparedStatement pstmt7 = conn3.prepareStatement(sql7);
            pstmt7.executeUpdate();

            PreparedStatement pstm = conn3.prepareStatement(sq);
            ResultSet rs = pstm.executeQuery();
            double val = 0;
            while(rs.next())
            {
                val = rs.getDouble("bal");
            }
            
            double updatedBal = val - f;
            updatedBal = Double.parseDouble(String.format("%.2f", updatedBal));

//            DecimalFormat format = new DecimalFormat("0.#");
//            format.format(updatedBal);
            
            updbal = updatedBal;
            String sql = "update customer_info set bal = " + updatedBal + " where uid = '" + usid + "'";
            
            PreparedStatement pstmt = conn3.prepareStatement(sql);
            pstmt.executeUpdate();
            
            
            
            
            
            String sqll = "select * from customer_info where uid = '" + usid + "'";
            String wallethistory = "";
            PreparedStatement pstmtt = conn3.prepareStatement(sqll);            
            ResultSet rss = pstmtt.executeQuery();
            while(rss.next())
            {
                wallethistory = rss.getString("wallethistory");
            }
            String temp = Double.toString(f);
            wallethistory = "-" + temp + wallethistory;
                
            String sqlll = "update customer_info set wallethistory = '" + wallethistory + "' where uid = '" + usid + "'";
                
            PreparedStatement pstmttt = conn3.prepareStatement(sqlll);
            pstmttt.executeUpdate();
            
            
            
            
            String sqq = "select * from customer_info where uid = '" + usid + "'";
            String ridehistory = "";
            PreparedStatement pstmm = conn3.prepareStatement(sqq);            
            ResultSet r = pstmm.executeQuery();
            while(r.next())
            {
                ridehistory = r.getString("ridehistory");
            }
            
            String dn = "";
            String car = "";
            String phone = "";
            String qq = "select * from drivers_info where vehicleId = '" + globevid + "'"; 
            pstmm = conn3.prepareStatement(qq);            
            r = pstmm.executeQuery();
            while(r.next())
            {
                dn = r.getString("name");
                car = r.getString("vehicle");
                phone = r.getString("phno");
            }
            
            
            
            String temp2 = "\n\n+Travelled from " + source + " to " + dest;
            String temp3 = "\nDriver: " + dn + ", Car: " + car;
            String temp4 = "\nPhone No.: " + phone;
            String temp5 = "\nAmount Paid: " + f;
            String finaltemp = temp2 + temp3 + temp4 + temp5;
            
            
            if(ridehistory.charAt(0) == '0')
            {
                ridehistory = finaltemp;
            }
            else
            {
                ridehistory = finaltemp + ridehistory;
            }
            
            sqlll = "update customer_info set ridehistory = '" + ridehistory + "' where uid = '" + usid + "'";
                
            pstmttt = conn3.prepareStatement(sqlll);
            pstmttt.executeUpdate();
            
            conn3.close();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        
        
        
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn4 = DriverManager.getConnection("jdbc:mysql://localhost:3306/customers", "root", "prakhar@18");
            String sql8 = "select sign from customer_info where uid = '" + usid + "'";
                
            PreparedStatement pstm = conn4.prepareStatement(sql8);
            
            int sign = 0;    
            for(; ;)
            {
                ResultSet rs = pstm.executeQuery();
                while(rs.next())
                {
                    sign = Integer.parseInt(rs.getString("sign"));
                }
                if(sign == 1)
                {
                    new Trip_Completion(f, t, updbal, globevid).setVisible(true);
//                    JOptionPane.showMessageDialog(null, "Prakhar is great");
                    break;
                }        
            }
            conn4.close();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }
}



//
//
//class Task3 extends Thread
//{
//    String usid;
//    Task3(String s)
//    {
//        usid = s;
//    }
//    public void run()
//    {
//        int count = 0;
//        for(; ;)
//        {
//            try
//            {
//                Thread.sleep(1000);
//                count -= -1;
//                if(count == 300) break;
//            }
//            catch(InterruptedException e)
//            {
//                System.out.println(e);
//            }
//        }
//        
//        
//        String sql6 = "update customer_info set status = '0' where uid = '" + usid + "'";
//        String sql7 = "update customer_info set vehicleId = '-1' where uid = '" + usid + "'";
//        try
//        {
//            Class.forName("com.mysql.jdbc.Driver");
//            Connection conn4 = DriverManager.getConnection("jdbc:mysql://localhost:3306/customers", "root", "prakhar@18");
//                    
//            PreparedStatement pstmt6 = conn4.prepareStatement(sql6);
//            pstmt6.executeUpdate();
//                    
//            PreparedStatement pstmt7 = conn4.prepareStatement(sql7);
//            pstmt7.executeUpdate();
//                    
//            conn4.close();
//        }
//        catch(Exception e)
//        {
//            JOptionPane.showMessageDialog(null, e);
//        }
//    }
//}